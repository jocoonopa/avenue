<?php

namespace Woojin\StoreBundle\Entity;

use Doctrine\ORM\EntityRepository;

use Woojin\UserBundle\Entity\User;

/**
 * HolidayRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HolidayRepository extends EntityRepository
{
    public function findByDate(\DateTime $date)
    {
        $start = clone $date;
        $end = clone $date;

        $start->modify('first day of this month');
        $end->modify('last day of this month');

        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb
            ->select('h')
            ->from('WoojinStoreBundle:Holiday', 'h')
            ->leftJoin('h.user', 'u')
            ->leftJoin('u.store', 's')
            ->where($qb->expr()->between('h.createAt', $qb->expr()->literal($start->format('Y-m-d 00:00:00')), $qb->expr()->literal($end->format('Y-m-d 23:59:59'))))
            ->orderBy('s.sn', 'DESC')
        ;

        return $qb->getQuery()->getResult();
    }

    public function findOneByDateAndUser(\DateTime $date, User $user)
    {
        $start = clone $date;
        $end = clone $date;

        $start->modify('first day of this month');
        $end->modify('last day of this month');

        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb
            ->select('h')
            ->from('WoojinStoreBundle:Holiday', 'h')
            ->leftJoin('h.user', 'u')
            ->leftJoin('u.store', 's')
            ->where(
                $qb->expr()->andX(
                    $qb->expr()->between('h.createAt', $qb->expr()->literal($start->format('Y-m-d 00:00:00')), $qb->expr()->literal($end->format('Y-m-d 23:59:59'))),
                    $qb->expr()->eq('h.user', $user->getId())
                )
            )
            ->orderBy('s.sn', 'DESC')
        ;

        return $qb->getQuery()->getOneOrNullResult();
    }
}
